#!/bin/sh

###############################################################################
##
##  HIGH VERBOSITY EXAMPLE
##
###############################################################################

# run from directory where this script is
cd `echo $0 | sed 's/\(.*\)\/.*/\1/'` # extract pathname
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example shows how to use pw.x and phcg.x to calculate the normal"
$ECHO "modes of a molecule (SiH4) at Gamma. It shows also the use of ph.x"
$ECHO "for molecules (CH4) at Gamma."
$ECHO

# set the needed environment variables
. ../../../environment_variables

# required executables and pseudopotentials

BIN_LIST="pw.x ph.x"
PSEUDO_LIST="Si.pz-vbc.UPF H.pz-vbc.UPF C.pz-rrkjus.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done
for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
       $ECHO
       $ECHO "Downloading $FILE to $PSEUDO_DIR...\c"
            $WGET $PSEUDO_DIR/$FILE \
                http://www.quantum-espresso.org/pseudo/1.3/UPF/$FILE 2> /dev/null
    fi
    if test $? != 0; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
PH_COMMAND="$PARA_PREFIX $BIN_DIR/ph.x $PARA_POSTFIX"
DYNMAT_COMMAND=" $BIN_DIR/dynmat.x"
$ECHO
$ECHO "  running pw.x     as: $PW_COMMAND"
$ECHO "  running ph.x     as: $PH_COMMAND"
$ECHO "  running dynmat.x as: $DYNMAT_COMMAND"
$ECHO

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/*
$ECHO " done"

# Self consistent calculation for CH4
cat > ch4.scf.xml << EOF
<?xml version="1.0" encoding="UTF-8"?>

<!-- ch4
ch4 molecule in a cubic box -->

<input calculation="scf" prefix="ch4">

	<cell type="qecell">
		<qecell ibrav="1" alat="15.0">
			<real rank="1" n1="5">
				0.0 0.0 0.0 0.0 0.0
			</real>
		</qecell>
	</cell>

	<atomic_species ntyp="2">
		<specie name="H">
			<property name="mass">
				<real>1.0</real>
			</property>
			<property name="pseudofile">
				<string>H.pz-vbc.UPF</string>
			</property>
		</specie>
		<specie name="C">
			<property name="mass">
				<real>12.0</real>
			</property>
			<property name="pseudofile">
				<string>C.pz-rrkjus.UPF</string>
			</property>
		</specie>
	</atomic_species>

	<atomic_list units="alat" nat="5" >
		<atom name="H">
			<position>
				<real rank="1" n1="3">
					0.080728893   0.080728893   0.080728893
				</real>
			</position>
		</atom>	
		<atom name="H">
			<position>
				<real rank="1" n1="3">
					-0.080728893  -0.080728893   0.080728893
				</real>
			</position>
		</atom>	
		<atom name="H">
			<position>
				<real rank="1" n1="3">
					0.080728893  -0.080728893  -0.080728893
				</real>
			</position>
		</atom>	
		<atom name="H">
			<position>
				<real rank="1" n1="3">
					-0.080728893   0.080728893  -0.080728893
				</real>
			</position>
		</atom>	
		<atom name="C">
			<position>
				<real rank="1" n1="3">
					0.000000000   0.000000000   0.000000000
				</real>
			</position>
		</atom>						
	</atomic_list>	
	
	
	<field name="InputOutput">

		<parameter name="restart_mode">
			<string>
				from_scratch
			</string>
		</parameter>
		
		<parameter name="pseudo_dir">
			<string>
				$PSEUDO_DIR/
			</string>
		</parameter>
		
		<parameter name="outdir">
			<string>
				$TMP_DIR/
			</string>
		</parameter>
		
		<parameter name="tprnfor">
			<logical>
				true
			</logical>
		</parameter>			
					
	</field>
	
	<field name="Numerics">

		<parameter name="ecutwfc">
			<real>
				25.0
			</real>
		</parameter>
		
		<parameter name="ecutrho">
			<real>
				100.0
			</real>
		</parameter>
		
		<parameter name="mixing_beta">
			<real>
				0.5
			</real>
		</parameter>
		
		<parameter name="conv_thr">
			<real>
				1.0d-8
			</real>
		</parameter>
		
	</field>
	
	<k_points type="tpiba">
		<mesh npoints="1">
			<real rank="2" n1="4" n2="1">
				  	0.0 0.0 0.0 1.0
			</real>
		</mesh>
	</k_points>
</input>
EOF
$ECHO "  running the scf calculation for CH4...\c"
$PW_COMMAND < ch4.scf.xml > ch4.scf.out
check_failure $?
$ECHO " done"

# normal mode calculation for CH4
cat > ch4.nm.in << EOF
vibrations of ch4
 &inputph
  tr2_ph=4.0d-17,
  prefix='ch4',
  outdir='$TMP_DIR',
  amass(1)=1.d0,
  amass(2)=12.d0,
  asr=.true.,
  zue=.true.,
  epsil=.true.,
  trans=.true.,
  fildyn='ch4.dyn.xml',
 /
0.0 0.0 0.0
EOF
$ECHO "  running normal mode calculation for CH4...\c"
$PH_COMMAND < ch4.nm.in > ch4.nm.out
check_failure $?
$ECHO " done"

$ECHO
$ECHO "$EXAMPLE_DIR: done"

# IR cross sections  for CH4
cat > ch4.dyn.in << EOF
 &input fildyn='ch4.dyn.xml', asr='zero-dim' /
EOF

$ECHO "  running IR cross section calculation for CH4...\c"
$DYNMAT_COMMAND < ch4.dyn.in > ch4.dyn.out
check_failure $?
$ECHO " done"


$ECHO
$ECHO "$EXAMPLE_DIR: done"
