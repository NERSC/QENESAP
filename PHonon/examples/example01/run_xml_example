#!/bin/sh

# run from directory where this script is
cd `echo $0 | sed 's/\(.*\)\/.*/\1/'` # extract pathname
EXAMPLE_DIR=`pwd`

# check whether ECHO has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example shows how to use pw.x and ph.x to calculate phonon"
$ECHO "frequencies at Gamma and X for Si and C in the diamond structure and"
$ECHO "for fcc-Ni."

# set the needed environment variables
. ../../../environment_variables

# required executables and pseudopotentials
BIN_LIST="pw.x ph.x"
PSEUDO_LIST="Si.pz-vbc.UPF C.pz-rrkjus.UPF Ni.pbe-nd-rrkjus.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done
for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
       $ECHO
       $ECHO "Downloading $FILE to $PSEUDO_DIR...\c"
            $WGET $PSEUDO_DIR/$FILE \
                http://www.quantum-espresso.org/pseudo/1.3/UPF/$FILE 2> /dev/null
    fi
    if test $? != 0; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
PH_COMMAND="$PARA_PREFIX $BIN_DIR/ph.x $PARA_POSTFIX"
$ECHO
$ECHO "  running pw.x as: $PW_COMMAND"
$ECHO "  running ph.x as: $PH_COMMAND"
$ECHO

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/*
$ECHO " done"

# self-consistent calculation
cat > si.scf.xml << EOF
<?xml version="1.0" encoding="UTF-8"?>


<input calculation="scf" prefix="si">

	<cell type="qecell">
		<qecell ibrav="2" alat="10.20">
			<real rank="1" n1="5">
				0.0 0.0 0.0 0.0 0.0
			</real>
		</qecell>
	</cell>

	<atomic_species ntyp="1">
		<specie name="Si">
			<property name="mass">
				<real>28.086</real>
			</property>
			<property name="pseudofile">
				<string>Si.pz-vbc.UPF</string>
			</property>
		</specie>
	</atomic_species>

	<atomic_list units="alat" nat="2" >
		<atom name="Si">
			<position>
				<real rank="1" n1="3">
					0.00 0.00 0.00
				</real>
			</position>
		</atom>	
		<atom name="Si">
			<position>
				<real rank="1" n1="3">
					0.25 0.25 0.25
				</real>
			</position>
		</atom>	
	</atomic_list>		
	
	
	<field name="InputOutput">

		<parameter name="restart_mode">
			<string>
				from_scratch
			</string>
		</parameter>

		<parameter name="pseudo_dir">
			<string>
				$PSEUDO_DIR/
			</string>
		</parameter>
		
		<parameter name="outdir">
			<string>
				$TMP_DIR/
			</string>
		</parameter>
		
	</field>
	
	<field name="Numerics">

		<parameter name="ecutwfc">
			<real>
				18.0
			</real>
		</parameter>
		
		<parameter name="conv_thr">
			<real>
				1.0d-8
			</real>
		</parameter>
		
		<parameter name="mixing_beta">
			<real>
				0.7
			</real>
		</parameter>
	
	</field>
	
	<k_points type="tpiba">
		<mesh npoints="10">
			<real rank="2" n1="4" n2="10">
				   0.1250000  0.1250000  0.1250000   1.00
				   0.1250000  0.1250000  0.3750000   3.00
				   0.1250000  0.1250000  0.6250000   3.00
				   0.1250000  0.1250000  0.8750000   3.00
				   0.1250000  0.3750000  0.3750000   3.00
				   0.1250000  0.3750000  0.6250000   6.00
				   0.1250000  0.3750000  0.8750000   6.00
				   0.1250000  0.6250000  0.6250000   3.00
				   0.3750000  0.3750000  0.3750000   1.00
				   0.3750000  0.3750000  0.6250000   3.00
			</real>
		</mesh>
	</k_points>
</input>
EOF
$ECHO "  running the scf calculation for Si...\c"
$PW_COMMAND < si.scf.xml > si.scf.out
check_failure $?
$ECHO " done"

# phonon calculation at Gamma
cat > si.phG.in << EOF
phonons of Si at Gamma
 &inputph
  tr2_ph=1.0d-14,
  prefix='si',
  epsil=.true.,
  amass(1)=28.08,
  outdir='$TMP_DIR/',
  fildyn='si.dynG',
 /
0.0 0.0 0.0
EOF
$ECHO "  running the phonon calculation at Gamma for Si...\c"
$PH_COMMAND < si.phG.in > si.phG.out
$ECHO " done"

# phonon calculation at X
cat > si.phX.in << EOF
phonons of si at X
 &inputph
  tr2_ph=1.0d-14,
  prefix='si',
  amass(1)=28.08,
  outdir='$TMP_DIR/',
  fildyn='si.dynX',
 /
1.0 0.0 0.0
EOF
$ECHO "  running the phonon calculation at X for Si...\c"
$PH_COMMAND < si.phX.in > si.phX.out
check_failure $?
$ECHO " done"

# self-consistent calculation
cat > si.scf.xml << EOF
<?xml version="1.0" encoding="UTF-8"?>


<input calculation="scf" prefix="si">

	<cell type="qecell">
		<qecell ibrav="2" alat="10.20">
			<real rank="1" n1="5">
				0.0 0.0 0.0 0.0 0.0
			</real>
		</qecell>
	</cell>

	<atomic_species ntyp="1">
		<specie name="Si">
			<property name="mass">
				<real>28.086</real>
			</property>
			<property name="pseudofile">
				<string>Si.pz-vbc.UPF</string>
			</property>
		</specie>
	</atomic_species>

	<atomic_list units="alat" nat="2" >
		<atom name="Si">
			<position>
				<real rank="1" n1="3">
					0.00 0.00 0.00
				</real>
			</position>
		</atom>	
		<atom name="Si">
			<position>
				<real rank="1" n1="3">
					0.25 0.25 0.25
				</real>
			</position>
		</atom>	
	</atomic_list>			
	
	
	<field name="InputOutput">

		<parameter name="restart_mode">
			<string>
				from_scratch
			</string>
		</parameter>

		<parameter name="pseudo_dir">
			<string>
				$PSEUDO_DIR/
			</string>
		</parameter>
		
		<parameter name="outdir">
			<string>
				$TMP_DIR/
			</string>
		</parameter>
		
	</field>
	
	<field name="Numerics">

		<parameter name="ecutwfc">
			<real>
				18.0
			</real>
		</parameter>
		
		<parameter name="conv_thr">
			<real>
				1.0d-8
			</real>
		</parameter>
		
		<parameter name="mixing_beta">
			<real>
				0.7
			</real>
		</parameter>
	
	</field>
	
	<k_points type="tpiba">
		<mesh npoints="10">
			<real rank="2" n1="4" n2="10">
				   0.1250000  0.1250000  0.1250000   1.00
				   0.1250000  0.1250000  0.3750000   3.00
				   0.1250000  0.1250000  0.6250000   3.00
				   0.1250000  0.1250000  0.8750000   3.00
				   0.1250000  0.3750000  0.3750000   3.00
				   0.1250000  0.3750000  0.6250000   6.00
				   0.1250000  0.3750000  0.8750000   6.00
				   0.1250000  0.6250000  0.6250000   3.00
				   0.3750000  0.3750000  0.3750000   1.00
				   0.3750000  0.3750000  0.6250000   3.00
			</real>
		</mesh>
	</k_points>
</input>
EOF
$ECHO "  running the scf calculation for Si again...\c"
$PW_COMMAND < si.scf.xml > si.scf.out
check_failure $?
$ECHO " done"
# single mode phonon calculation at X
cat > si.phXsingle.in << EOF
phonons of si at X, single mode
 &inputph
  tr2_ph=1.0d-14,
  prefix='si',
  amass(1)=28.08,
  outdir='$TMP_DIR/'
  modenum=3
 /
1.0 0.0 0.0
EOF
$ECHO "  running the phonon calculation for Si at X for a single mode...\c"
$PH_COMMAND < si.phXsingle.in > si.phXsingle.out
check_failure $?
$ECHO " done"

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/*
$ECHO " done"

# self-consistent calculation for C with US-PP
cat > c.scf.xml << EOF
<?xml version="1.0" encoding="UTF-8"?>


<input calculation="scf" prefix="C">

	<cell type="qecell">
		<qecell ibrav="2" alat="6.74">
			<real rank="1" n1="5">
				0.0 0.0 0.0 0.0 0.0
			</real>
		</qecell>
	</cell>

	<atomic_species ntyp="1">
		<specie name="C">
			<property name="mass">
				<real>12.0107</real>
			</property>
			<property name="pseudofile">
				<string>C.pz-rrkjus.UPF</string>
			</property>
		</specie>
	</atomic_species>

	<atomic_list units="alat" nat="2" >
		<atom name="C">
			<position>
				<real rank="1" n1="3">
					0.00 0.00 0.00
				</real>
			</position>
		</atom>	
		<atom name="C">
			<position>
				<real rank="1" n1="3">
					0.25 0.25 0.25
				</real>
			</position>
		</atom>		
	</atomic_list>		
	
	
	<field name="InputOutput">

		<parameter name="restart_mode">
			<string>
				from_scratch
			</string>
		</parameter>

		<parameter name="pseudo_dir">
			<string>
				$PSEUDO_DIR/
			</string>
		</parameter>
		
		<parameter name="outdir">
			<string>
				$TMP_DIR/
			</string>
		</parameter>
		
	</field>
	
	<field name="Numerics">

		<parameter name="ecutwfc">
			<real>
				27.0
			</real>
		</parameter>
		
		<parameter name="ecutrho">
			<real>
				300.0
			</real>
		</parameter>
		
		<parameter name="conv_thr">
			<real>
				1.0d-9
			</real>
		</parameter>
		
		<parameter name="nr1">
			<integer>
				32
			</integer>
		</parameter>
		
		<parameter name="nr2">
			<integer>
				32
			</integer>
		</parameter>
		
		<parameter name="nr3">
			<integer>
				32
			</integer>
		</parameter>
		
		<parameter name="mixing_beta">
			<real>
				0.7
			</real>
		</parameter>
	
	</field>
	
	<k_points type="automatic">
		<mesh>
			<integer rank="1" n1="6">
				4 4 4 1 1 1
			</integer>
		</mesh>
	</k_points>
</input>
EOF
$ECHO "  running the scf calculation for C...\c"
$PW_COMMAND < c.scf.xml > c.scf.out
check_failure $?
$ECHO " done"

# phonon calculation at G
cat > c.phG.in << EOF
phonons of C at Gamma
 &inputph
  tr2_ph=1.0d-14,
  epsil=.true.,
  prefix='C',
  fildyn='Cg.dyn',
  amass(1)=12.0107,
  outdir='$TMP_DIR/'
 /
0.0 0.0 0.0
EOF
$ECHO "  running the phonon calculation for C at Gamma...\c"
$PH_COMMAND < c.phG.in > c.phG.out
check_failure $?
$ECHO " done"


# self-consistent calculation for Ni with US-PP
cat > ni.scf.xml << EOF
<?xml version="1.0" encoding="UTF-8"?>


<input calculation="scf" prefix="ni">

	<cell type="qecell">
		<qecell ibrav="2" alat="6.65">
			<real rank="1" n1="5">
				0.0 0.0 0.0 0.0 0.0
			</real>
		</qecell>
	</cell>

	<atomic_species ntyp="1">
		<specie name="Ni">
			<property name="mass">
				<real>58.6934</real>
			</property>
			<property name="pseudofile">
				<string>Ni.pbe-nd-rrkjus.UPF</string>
			</property>
			<property name="starting_magnetization">
				<real>
					0.5
				</real>
			</property>
		</specie>
	</atomic_species>

	<atomic_list units="alat" nat="1" >
		<atom name="Ni">
			<position>
				<real rank="1" n1="3">
					0.00 0.00 0.00
				</real>
			</position>
		</atom>	
	</atomic_list>		
	
	
	<field name="InputOutput">

		<parameter name="restart_mode">
			<string>
				from_scratch
			</string>
		</parameter>

		<parameter name="pseudo_dir">
			<string>
				$PSEUDO_DIR/
			</string>
		</parameter>
		
		<parameter name="outdir">
			<string>
				$TMP_DIR/
			</string>
		</parameter>
		
		<parameter name="tprnfor">
			<logical>
				true
			</logical>
		</parameter>
		
	</field>
	
	<field name="Numerics">

		<parameter name="ecutwfc">
			<real>
				27.0
			</real>
		</parameter>
		
		<parameter name="ecutrho">
			<real>
				300.0
			</real>
		</parameter>
		
		<parameter name="conv_thr">
			<real>
				1.0d-8
			</real>
		</parameter>
		
		<parameter name="mixing_beta">
			<real>
				0.7
			</real>
		</parameter>
	
	</field>
	
	<field name="Options">

		<parameter name="occupations">
			<string>
				smearing
			</string>
		</parameter>
		
		<parameter name="smearing">
			<string>
				mp
			</string>
		</parameter>
		
		<parameter name="degauss">
			<real>
				0.02
			</real>
		</parameter>		
	
	</field>
	
	<field name="Fields">

		<parameter name="nspin">
			<integer>
				2
			</integer>
		</parameter>
		
	</field>			
	
	<k_points type="automatic">
		<mesh>
			<integer rank="1" n1="6">
				4 4 4 1 1 1
			</integer>
		</mesh>
	</k_points>
</input>
EOF
$ECHO "  running the scf calculation for Ni...\c"
$PW_COMMAND < ni.scf.xml > ni.scf.out
check_failure $?
$ECHO " done"

# phonon calculation at X
cat > ni.phX.in << EOF
phonons of Ni at X
 &inputph
  tr2_ph=1.0d-14,
  prefix='ni',
  amass(1)=58.6934,
  fildyn='nix.dyn',
  outdir='$TMP_DIR/',
 /
0.0 0.0 1.0
EOF
$ECHO "  running the phonon calculation at X for Ni...\c"
$PH_COMMAND < ni.phX.in > ni.phX.out
check_failure $?
$ECHO " done"

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/*
$ECHO " done"

$ECHO
$ECHO "$EXAMPLE_DIR: done"
