#!/bin/sh

# run from directory where this script is
cd `echo $0 | sed 's/\(.*\)\/.*/\1/'` # extract pathname
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example will calculate the initial state contribution for a Rh011 slab"

# set the needed environment variables
. ../../../environment_variables

# required executables and pseudopotentials
BIN_LIST="pw.x initial_state.x"
PSEUDO_LIST="Rh.pbe-rrkjus_lb.UPF Rhs.pbe-rrkjus_lb.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done
for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
       $ECHO
       $ECHO "Downloading $FILE to $PSEUDO_DIR...\c"
            $WGET $PSEUDO_DIR/$FILE \
                http://www.quantum-espresso.org/pseudo/1.3/UPF/$FILE 2> /dev/null
    fi
    if test $? != 0; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
IS_COMMAND="$PARA_PREFIX $BIN_DIR/initial_state.x $PARA_POSTFIX"
$ECHO
$ECHO "  running pw.x as: $PW_COMMAND"
$ECHO "  running initial_state.x as: $IS_COMMAND"
$ECHO

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/*
$ECHO " done"
#
# self-consistent calculation. Note the definitions in atomic_species and ntyp in &system
# 
cat > rh011slab.scf.xml << EOF
<?xml version="1.0" encoding="UTF-8"?>


<input calculation="scf" prefix="Rh011">

	<cell type="matrix" sym="cubic">
		<matrix units="alat" alat="10.31510000">
			<real rank="2" n1="3" n2="3">		
				0.50000000 0.00000000 0.00000000
				0.00000000 0.70710678 0.00000000
				0.00000000 0.00000000 3.00000000
			</real>
		</matrix>
	</cell>

	<atomic_species ntyp="2">
		<specie name="Rh">
			<property name="mass">
				<real>1.0</real>
			</property>
			<property name="pseudofile">
				<string>Rh.pbe-rrkjus_lb.UPF</string>
			</property>		
		</specie>
		<specie name="Rhs">
			<property name="mass">
				<real>1.0</real>
			</property>
			<property name="pseudofile">
				<string>Rhs.pbe-rrkjus_lb.UPF</string>
			</property>		
		</specie>
	</atomic_species>

	<atomic_list units="alat" nat="5" >
		<atom name="Rh">
			<position>
				<real rank="1" n1="3">
					0.25000000     0.35000000     0.50000000
				</real>
			</position>
			<!-- ! Surface atom core-exited -->
		</atom>
		<atom name="Rh">
			<position>
				<real rank="1" n1="3">
					0.00000000     0.00000000     0.25000000
				</real>
			</position>
			
		</atom>	
		<atom name="Rh">
			<position>
				<real rank="1" n1="3">
					0.25000000     0.35000000     0.00000000
				</real>
			</position>
		</atom>	
		<atom name="Rh">
			<position>
				<real rank="1" n1="3">
					0.00000000     0.00000000    -0.25000000
				</real>
			</position>
		</atom>	
		<atom name="Rh">
			<position>
				<real rank="1" n1="3">
					0.25000000     0.35000000    -0.50000000
				</real>
			</position>
		</atom>							
	</atomic_list>		
	
	
	<field name="InputOutput">

		<parameter name="restart_mode">
			<string>
				from_scratch
			</string>
		</parameter>
		
		<parameter name="pseudo_dir">
			<string>
			 $PSEUDO_DIR/
			</string>
		</parameter>
		
		<parameter name="outdir">
			<string>
			  $TMP_DIR/
			</string>
		</parameter>
	
	</field>
	
	<field name="Numerics">

		<parameter name="ecutwfc">
			<real>
				25.0
			</real>
		</parameter>
		
		<parameter name="mixing_beta">
			<real>
				0.3
			</real>
		</parameter>
		
		<parameter name="conv_thr">
			<real>
				1.0d-6
			</real>
		</parameter>
		
	</field>
	
	<field name="Options">

		<parameter name="occupations">
			<string>
				smearing
			</string>
		</parameter>
		
		<parameter name="smearing">
			<string>
				mp
			</string>
		</parameter>
		
		<parameter name="degauss">
			<real>
				0.03
			</real>
		</parameter>			
		
	</field>	
	
	<k_points type="gamma">
	</k_points>
	
</input>
EOF
$ECHO
$ECHO "  running pw.x for Rh011 slab...\c"
$PW_COMMAND < rh011slab.scf.xml > rh011slab.scf.out
check_failure $?
$ECHO " done"

# Initial state calculation as a post-processing tool
# 
cat > rh011slab.istate.in << EOF
&inputpp
       prefix='Rh011',
       outdir='$TMP_DIR'
       excite(1) = 2,
/
EOF
$ECHO
$ECHO "  running initial_state.x for RhUS->RhsUS ...\c"
$IS_COMMAND < rh011slab.istate.in > rh011slab.istate.out
check_failure $?
$ECHO " done"

#
#       Extract data and write results
#
enbulk=$(grep "atom   3 type  1" rh011slab.istate.out | head -n1 | cut -d" " -f 19)
enlay1=$(grep "atom   2 type  1" rh011slab.istate.out | head -n1 | cut -d" " -f 19)
ensurf=$(grep "atom   1 type  1" rh011slab.istate.out | head -n1 | cut -d" " -f 19)


clssurfry=$(echo "scale=5; ($enbulk)-($ensurf)" | bc) 
clssurfev=$(echo "scale=5; (($enbulk)-($ensurf))*13.6" | bc) 

clslay1ry=$(echo "scale=5; ($enbulk)-($enlay1)" | bc) 
clslay1ev=$(echo "scale=5; (($enbulk)-($enlay1))*13.6" | bc) 

$ECHO "" > initial-state.txt
$ECHO "IS contribution for the bulk atom: $enbulk (Ry)" >> initial-state.txt
$ECHO "IS contribution for the surface atom: $ensurf (Ry)" >> initial-state.txt
$ECHO "IS contribution for the layer(-1) atom: $enlay1 (Ry)" >> initial-state.txt
$ECHO "" >> initial-state.txt
$ECHO "------------------------------------------" >> initial-state.txt
$ECHO "" >> initial-state.txt
$ECHO "IS shift surface: $clssurfev (eV)" >> initial-state.txt
$ECHO "IS shift layer(-1): $clslay1ev (eV)" >> initial-state.txt

$ECHO
$ECHO "  Results written in results/initial-state.txt !"
$ECHO
$ECHO "$EXAMPLE_DIR: done"

